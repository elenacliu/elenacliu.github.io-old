<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maven on cliu&#39;s Blog</title>
    <link>http://elenacliu.github.io/tags/Maven/</link>
    <description>Recent content in Maven on cliu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://elenacliu.github.io/tags/Maven/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Maven 使用小记</title>
      <link>http://elenacliu.github.io/post/2023-07-8-Maven_%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Sat, 08 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>http://elenacliu.github.io/post/2023-07-8-Maven_%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%AE%B0/</guid>
      <description>Maven 使用小记 # 本文主要内容整理自菜鸟教程：https://www.runoob.com/maven/maven-tutorial.html，此处作为备忘录进行记录。感谢前人的知识总结和分享！
Maven 官方 tutorial：https://maven.apache.org/guides/getting-started/index.html
什么是 Maven # Maven 是 Apache 下的一个项目管理工具，可以对 Java 项目进行构建和依赖管理。同时，Maven 也可被用于构建和管理各种项目，例如 C#，Ruby，Scala 和其他语言编写的项目。Maven 曾是 Jakarta 项目的子项目，现为由 Apache 软件基金会主持的独立 Apache 项目。
Maven 约定配置 # Maven 提倡使用一个共同的标准目录结构，Maven 使用约定优于配置的原则，要尽可能遵守这样的目录结构：
目录 目的 ${basedir} 存放pom.xml和所有的子目录 ${basedir}/src/main/java 项目的java源代码 ${basedir}/src/main/resources 项目的资源，比如说property文件，springmvc.xml ${basedir}/src/test/java 项目的测试类，比如说Junit代码 ${basedir}/src/test/resources 测试用的资源 ${basedir}/src/main/webapp/WEB-INF web应用文件目录，web项目的信息，比如存放web.xml、本地图片、jsp视图页面 ${basedir}/target 打包输出目录 ${basedir}/target/classes 编译输出目录 ${basedir}/target/test-classes 测试编译输出目录 Test.java Maven只会自动运行符合该命名规则的测试类 ~/.m2/repository Maven默认的本地仓库目录位置；mvn install 时会将打包文件部署到本地 Maven 仓库，如果没有设置仓库路径，就在这个路径下 Maven POM # POM（project object model）是 Maven 的基本工作单元，命名为 pom.xml，包含了项目的基本信息，用于描述项目如何构建、声明项目依赖等。</description>
    </item>
    
  </channel>
</rss>